plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'signing'
}

group = "io.github.guozheng"
version = "0.0.1"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'

    // https://mvnrepository.com/artifact/junit/junit
    testImplementation 'junit:junit:4.13.2'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    // https://mvnrepository.com/artifact/org.jmockit/jmockit
    testImplementation 'org.jmockit:jmockit:1.38'
//    // https://mvnrepository.com/artifact/org.jmock/jmock-junit4
//    testImplementation 'org.jmock:jmock-junit4:2.12.0'

    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-client
//    testImplementation 'org.eclipse.jetty:jetty-client:11.0.11'

    // https://mvnrepository.com/artifact/xerces/xercesImpl
    testImplementation 'xerces:xercesImpl:2.12.2'
}

mainClassName = 'org.woshiadai.jvast.VideoAdProcessor'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'jvast'
            from components.java
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    sign configurations.archives
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "${mainClassName}"
    }
    archiveBaseName = "${rootProject.name}"
    duplicatesStrategy = 'include'
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}